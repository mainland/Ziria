# This file has been generated -- see https://github.com/hvr/multi-ghc-travis
language: cpp
sudo: required
dist: trusty

cache:
  directories:
    - $HOME/.cabsnap
    - $HOME/.cabal/packages

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

matrix:
  include:
    - env: CABALVER=1.18 GHCVER=7.8.3 ALEXVER=3.1.3 HAPPYVER=1.19.4 COMPILER=gcc TRAVIS_TEST=normal
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.3,alex-3.1.3,happy-1.19.4], sources: [hvr-ghc]}}
    - env: CABALVER=1.18 GHCVER=7.8.3 ALEXVER=3.1.3 HAPPYVER=1.19.4 COMPILER=gcc TRAVIS_TEST=perf
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.3,alex-3.1.3,happy-1.19.4], sources: [hvr-ghc]}}
    - env: CABALVER=1.18 GHCVER=7.8.3 ALEXVER=3.1.3 HAPPYVER=1.19.4 COMPILER=gcc TRAVIS_TEST=pedantic
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.3,alex-3.1.3,happy-1.19.4], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=normal
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=perf
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=pedantic
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=clang TRAVIS_TEST=normal
      compiler: clang
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=clang TRAVIS_TEST=perf
      compiler: clang
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=clang TRAVIS_TEST=pedantic
      compiler: clang
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.0.2 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=normal
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.0.2 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=perf
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.0.2 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=pedantic
      compiler: gcc
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=normal
      compiler: gcc
      addons: {apt: {packages: [cabal-install-head,ghc-head,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=perf
      compiler: gcc
      addons: {apt: {packages: [cabal-install-head,ghc-head,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=pedantic
      compiler: gcc
      addons: {apt: {packages: [cabal-install-head,ghc-head,alex-3.1.7,happy-1.19.5], sources: [hvr-ghc]}}

  allow_failures:
    - env: CABALVER=1.22 GHCVER=7.10.3 ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=clang TRAVIS_TEST=pedantic
    - env: CABALVER=head GHCVER=head ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=normal
    - env: CABALVER=head GHCVER=head ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=perf
    - env: CABALVER=head GHCVER=head ALEXVER=3.1.7 HAPPYVER=1.19.5 COMPILER=gcc TRAVIS_TEST=pedantic

before_install:
 - unset CC
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - export PATH=/opt/happy/$HAPPYVER/bin:/opt/alex/$ALEXVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ];
   then
     zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz >
          $HOME/.cabal/packages/hackage.haskell.org/00-index.tar;
   fi
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - cabal install --only-dependencies --enable-tests --enable-benchmarks --dry -v > installplan.txt
 - sed -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt

# check whether current requested install-plan matches cached package-db snapshot
 - if diff -u installplan.txt $HOME/.cabsnap/$GHCVER/installplan.txt;
   then
     echo "cabal build-cache HIT";
     rm -rfv .ghc;
     cp -a $HOME/.cabsnap/$GHCVER/ghc $HOME/.ghc;
     cp -a $HOME/.cabsnap/$GHCVER/lib $HOME/.cabsnap/$GHCVER/share $HOME/.cabsnap/$GHCVER/bin $HOME/.cabal/;
   else
     echo "cabal build-cache MISS";
     rm -rf $HOME/.cabsnap/$GHCVER;
     mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin;
     cabal install --only-dependencies --enable-tests --enable-benchmarks;
   fi

# snapshot package-db on cache miss
 - if [ ! -d $HOME/.cabsnap/$GHCVER ];
   then
      echo "snapshotting package-db to build-cache";
      mkdir $HOME/.cabsnap;
      mkdir $HOME/.cabsnap/$GHCVER;
      cp -a $HOME/.ghc $HOME/.cabsnap/$GHCVER/ghc;
      cp -a $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/$GHCVER/;
   fi

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - # cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - make quick
 - # cabal test
 - # cabal check
 - # cabal sdist   # tests that a source-distribution can be generated
 - bash travis.bash

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
# - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
#   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")

# EOF
